CONFIG = {
    # ==== DEV TOOLS

    # Sets the amount of debug messages that are printed to console
    # 0 - Nothing
    # 1 - Allows things that print only once
    # 2 - Allows things that only conditionally print every loop
    # 3 - Everything
    "DEBUG_LEVEL": 0,
    # Print all of the points to console. Only do this for small graphs
    "print_points": False,
    # The threshold for floating point equality comparisons
    # DO NOT CHANGE
    "fl_precision": 0.00000001,
    # Do not print `report` calls
    "suppress_report": True,

    # ==== POINT GENERATION

    # The amount of time between point calculations
    # A smaller time step means longer renders but smoother lines
    # NOTE: If the number of steps exceeds the maximum, the length will be increased to compensate
    "step_length": 0.0000001,
    # Renders additional points between two steps if the pen moved a lot
    # On some graphs, this can dramatically increase render times
    # However, on graphs with only a few jagged curves, this can increase smoothness without lowering the time step
    "smoothing": True,
    # If smoothing is turned on, this is the distance threshold above which points will be interpolated
    # Recommended values are between 1 and 0.1
    "max_point_sep": 1,
    # Caps the total number of time steps. Low numbers will guarantee quick results,
    # but may produce poor results with complicated patterns
    # NOTE: Any additional points generated by smoothing will not count towards this limit
    "max_steps": 50000,
    # If `True`, point calculation will be restricted to a single thread. This will greatly slow down rendering
    "disable_threading": False,

    # ==== OUTPUT OPTIONS

    # The name of the output file.
    # Supported extensions: eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff
    "output_file": "graph.jpg",
    # Whitespace to put around the graph
    "padding": 0.1,
    # The horizontal resolution of rasterized outputs
    # This will only slow down plot rendering, not point generation
    "resolution": 5000,
    # Whether to print the rotor parameters at the bottom of the graph
    "show_params": True,
    # Padding for the parameter text
    "param_padding": 0.01,

    # ==== OUTPUT APPEARANCE

    # The color of the line
    "color": "red",
    # The thickness of the line
    "line_width": 0.2,
    # The background color
    "bg_color": "blue",
    # Color of the parameter text
    "param_color": "white",
}